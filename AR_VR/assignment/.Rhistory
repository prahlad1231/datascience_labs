#The DataSet contains 3755 rows and 7 columns. Initially we had 11 columns but as there were alot of
#categorical variables  in job_title, employee_residence and company_location dropped them. and we converted experience_level
#employment_type, company_size
#unique(df$experience_level_numeric)
'Experience Level:
"EN" (Entry-level / Junior)-1
"MI" (Mid-level / Intermediate)-2
"SE" (Senior-level / Expert)-3
"EX" (Executive-level / Director)-4
Employment Type:
"FT" (Full-time)-1
"CT" (Contract)-2
"FL" (Freelance)-3
"PT" (Part-time)-4
Company Size:
"L" (More than 250 employees - Large)-3
"M" (50 to 250 employees - Medium)-2
"S" (Less than 50 employees - Small)-1'
# Renaming values in the "experience_level" column using direct assignment
#df_2$experience_level[df_2$experience_level == "EN"] <- "Entry-Level/Junior"
#df_2$experience_level[df_2$experience_level == "MI"] <- "Mid-level/Intermediate"
#df_2$experience_level[df_2$experience_level == "SE"] <- "Senior-level/Expert"
#df_2$experience_level[df_2$experience_level == "EX"] <- "Executive-level/Director"
# Create a countplot
ggplot(data = df, aes(x = experience_level)) +
geom_bar() +
labs(title = 'Experience Levels of Data Science Jobs',
x = 'Experience Level',
y = 'Count') +
theme_minimal() +
theme(plot.title = element_text(size = 18, hjust = 0.5),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14)
)
# Reorder "job_title" based on count
df$job_title <- factor(df$job_title, levels = names(sort(table(df$job_title), decreasing = TRUE)))
# Filter the data to keep only the top 10 categories
df <- df[df$job_title %in% levels(df$job_title)[1:10], ]
# Create the bar chart
ggplot(df, aes(x = job_title)) +
geom_bar() +
geom_text(aes(label = ..count..), stat = 'count', vjust = -0.5, size = 5, hjust = 1) + # Print count labels
labs(title = 'Top 10 Job Titles in Data Science',
x = 'Job Titles',
y = 'Count') +
theme_minimal() +
theme(plot.title = element_text(size = 20, face = 'bold'),
axis.title.x = element_text(size = 15, face = 'bold'),
axis.title.y = element_text(size = 15, face = 'bold'),
axis.text.y = element_text(size = 12)) + # Adjust label size
coord_flip()
# Rename values in the "employment_type" column using direct assignment
df$employment_type[df$employment_type == "PT"] <- "Part-time"
df$employment_type[df$employment_type == "FT"] <- "Full-time"
df$employment_type[df$employment_type == "CT"] <- "Contract"
df$employment_type[df$employment_type == "FL"] <- "Freelance"
# Load the ggplot2 package
library(ggplot2)
# Load the ggplot2 package if not already loaded
library(ggplot2)
# Create a bar plot with labels
p <- ggplot(counts_df, aes(x = employment_type, y = count, label = count)) +
geom_col(fill = "#0072B2", width = 0.6) + # Custom color and width
geom_text(vjust = -0.5, size = 6, color = "black", fontface = "bold") + # Adjust label size and style
labs(title = 'Employment Type of Data Science Jobs',
x = 'Employment Type',
y = 'Count') +
theme_minimal() +
theme(
plot.title = element_text(size = 20, hjust = 0.5, face = "bold"), # Adjust title size and style
axis.title.x = element_text(size = 16, face = "bold"), # Adjust x-axis label size and style
axis.title.y = element_text(size = 16, face = "bold"), # Adjust y-axis label size and style
axis.text.x = element_text(size = 12, angle = 45, hjust = 1), # Rotate x-axis labels for readability
panel.grid.major = element_blank(), # Remove major grid lines
panel.grid.minor = element_blank(), # Remove minor grid lines
panel.border = element_blank(), # Remove border around the plot
panel.background = element_blank() # Remove background color
)
# Create a bar plot with labels
p <- ggplot(df, aes(x = employment_type, y = count, label = count)) +
geom_col(fill = "#0072B2", width = 0.6) + # Custom color and width
geom_text(vjust = -0.5, size = 6, color = "black", fontface = "bold") + # Adjust label size and style
labs(title = 'Employment Type of Data Science Jobs',
x = 'Employment Type',
y = 'Count') +
theme_minimal() +
theme(
plot.title = element_text(size = 20, hjust = 0.5, face = "bold"), # Adjust title size and style
axis.title.x = element_text(size = 16, face = "bold"), # Adjust x-axis label size and style
axis.title.y = element_text(size = 16, face = "bold"), # Adjust y-axis label size and style
axis.text.x = element_text(size = 12, angle = 45, hjust = 1), # Rotate x-axis labels for readability
panel.grid.major = element_blank(), # Remove major grid lines
panel.grid.minor = element_blank(), # Remove minor grid lines
panel.border = element_blank(), # Remove border around the plot
panel.background = element_blank() # Remove background color
)
print(p)
salary_df <- read.table("ds_salaries.csv")
salary_df <- read.csv("ds_salaries.csv")
# cheking if there are any null values in the dataframe
colSums(is.na(salary_df))
# Summary of the dataset
summary(salary_df)
colnames(salary_df)
# taking only the numeric columns
numeric_columns <- salary_df[, c(1, 5, 7, 9)]
numeric_columns
head(numeric_columns)
summary(numeric_columns)
# taking the unique values of work_year
unique_work_years <- unique(salary_df$work_year)
unique_work_years
# finding the frequency of work years
frequency_work_year <- frequency(salary_df$work_year)
frequency_work_year
# finding the frequency of work years
frequency_work_year <- table(salary_df$work_year)
frequency_work_year
# plotting a pie chart showing the work year
color_palette <- rainbow(length(frequency_work_year))
pie(frequency_work_year, col = color_palette, main = "Work Year")
legend("topright", as.character(sort(unique_work_years)), cex=0.5, fill = color_palette)
legend("topright", as.character(sort(unique_work_years)), cex=0.8, fill = color_palette)
legend("topright", as.character(sort(unique_work_years)), cex=1, fill = color_palette)
pie(frequency_work_year, col = color_palette, main = "Distribution of Work Year")
legend("topright", as.character(sort(unique_work_years)), cex=1, fill = color_palette)
# showing same data in bar plot
barplot(frequency_work_year, xlab = "Year", ylab="Count", main = "Distribution of Work Year", col = color_palette)
legend("topleft", as.character(sort(unique_work_years)), fill = color_palette)
# selecting all the unique values from columns : experience_level, employment type, job title, and so on
colnames(salary_df)
col_array <- salary_df[, c(2, 3, 4, 6, 8, 10, 11)]
unique_values <- sapply(col_array, function(col) unique(col))
print(unique_values)
# selecting all the unique values from columns : experience_level, employment type, job title, and so on
colnames(salary_df)
col_array <- salary_df[, c(2, 3, 4, 6, 8, 10, 11)]
unique_values <- sapply(col_array, function(column) unique(column))
print(unique_values)
# finding the frequency of each values
frequency_of_unique_values <- sapply(col_array, function(column) table(column))
frequency_of_unique_values
# sorting the values based on their frequency
sorted_frequency_of_unique_values <- lapply(frequency_of_unique_values, function(val) sort(val), decreasing=F)
# sorting the values based on their frequency
sorted_frequency_of_unique_values <- lapply(frequency_of_unique_values, function(val) sort(head(val)), decreasing=F)
# sorting the values based on their frequency
sorted_frequency_of_unique_values <- lapply(frequency_of_unique_values, function(val) sort(head(val)), decreasing=F)
# sorting the values based on their frequency
sorted_frequency_of_unique_values <- lapply(frequency_of_unique_values, function(column) column[order(column, decreasing = TRUE)])
print(sorted_frequency_of_unique_values)
# Plotting the bar graph of the above columns
col_array
# Plotting the bar graph of the above columns
colnames(col_array)
labels <- c("Experience Level", "Employment Type", "Job Title", "Salary Currency", "Employee Residence", "Company Location", "Company Size")
barplot(sorted_frequency_of_unique_values[[i]], main=labels[i], xlab="Category", ylab="Count")
for (i in 1:length(sorted_frequency_of_unique_values)) {
barplot(sorted_frequency_of_unique_values[[i]], main=labels[i], xlab="Category", ylab="Count")
}
barplot(head(sorted_frequency_of_unique_values[[i]]), main=labels[i], xlab="Category", ylab="Count")
for (i in 1:length(sorted_frequency_of_unique_values)) {
barplot(head(sorted_frequency_of_unique_values[[i]]), main=labels[i], xlab="Category", ylab="Count")
}
# finding the trends in the average salaries in each year
library(dplyr)
# first, grouping the data by work_year and then finding the average salary
average_annual_salary <- salary_df %>%
group_by(salary_df$work_year) %>%
summarise(average_salary=mean(salary_in_usd))
print(average_annual_salary)
library(ggplot2)
# plotting a trend line
ggplot(average_annual_salary, aes(x=salary_df$work_year, y=average_salary)) +
geom_line() +
labs(title = "Trends of Average Annual Salary", x="Work Year", y="Average Salary")
# plotting a trend line
ggplot(average_annual_salary, aes(x=work_year, y=average_salary)) +
geom_line() +
labs(title = "Trends of Average Annual Salary", x="Work Year", y="Average Salary")
# first, grouping the data by work_year and then finding the average salary
average_annual_salary <- salary_df %>%
group_by(salary_df$work_year) %>%
summarise(average_salary=mean(salary_in_usd))
print(average_annual_salary)
# plotting a trend line
ggplot(average_annual_salary, aes(x=salary_df$work_year, y=average_salary)) +
geom_line() +
labs(title = "Trends of Average Annual Salary", x="Work Year", y="Average Salary")
average_salary
# first, grouping the data by work_year and then finding the average salary
average_annual_salary <- salary_df %>%
group_by(salary_df$work_year) %>%
summarise(average_salary=mean(salary_in_usd))
print(average_annual_salary)
average_salary
# plotting a trend line
ggplot(average_annual_salary, aes(x=salary_df$work_year, y=average_annual_salary$average_salary)) +
geom_line() +
labs(title = "Trends of Average Annual Salary", x="Work Year", y="Average Salary")
# plotting a trend line
ggplot(average_annual_salary, aes(x=salary_df$work_year, y=average_salary)) +
geom_line() +
labs(title = "Trends of Average Annual Salary", x="Work Year", y="Average Salary")
# plotting a trend line
ggplot(average_annual_salary, aes(x=unique_work_years, y=average_salary)) +
geom_line() +
labs(title = "Trends of Average Annual Salary", x="Work Year", y="Average Salary")
print(average_annual_salary)
print(mean(salary_df$salary_in_usd))
print(average_annual_salary)
# first, grouping the data by work_year and then finding the average salary
average_annual_salary <- salary_df %>%
group_by(salary_df$work_year) %>%
summarise(average_salary=mean(salary_in_usd))
print(average_annual_salary)
# plotting a trend line
ggplot(average_annual_salary, aes(x=unique_work_years, y=average_annual_salary)) +
geom_line() +
labs(title = "Trends of Average Annual Salary", x="Work Year", y="Average Salary")
# plotting a trend line
ggplot(average_annual_salary, aes(x=unique_work_years, y=average_salary)) +
geom_line() +
labs(title = "Trends of Average Annual Salary", x="Work Year", y="Average Salary")
print(average_annual_salary)
# plotting a trend line
ggplot(average_annual_salary, aes(x=salary_df$work_year, y=average_salary)) +
geom_line() +
labs(title = "Trends of Average Annual Salary", x="Work Year", y="Average Salary")
# plotting a trend line
ggplot(average_annual_salary, aes(x=unique_work_years$work_year, y=average_salary)) +
geom_line() +
labs(title = "Trends of Average Annual Salary", x="Work Year", y="Average Salary")
# plotting a trend line
ggplot(average_annual_salary, aes(x=unique_work_year, y=average_salary)) +
geom_line() +
labs(title = "Trends of Average Annual Salary", x="Work Year", y="Average Salary")
# first, grouping the data by work_year and then finding the average salary
average_annual_salary <- salary_df %>%
group_by(salary_df$work_year) %>%
summarise(average_salary=mean(salary_in_usd))
print(average_annual_salary)
# plotting a trend line
ggplot(average_annual_salary, aes(x=unique_work_year, y=average_salary)) +
geom_line() +
labs(title = "Trends of Average Annual Salary", x="Work Year", y="Average Salary")
# plotting a trend line
ggplot(average_annual_salary, aes(x=unique_work_years, y=average_salary)) +
geom_line() +
labs(title = "Trends of Average Annual Salary", x="Work Year", y="Average Salary")
# plotting a trend line
unique_work_years
# plotting a trend line
ggplot(average_annual_salary, aes(x=sort(unique_work_years), y=average_salary)) +
geom_line() +
labs(title = "Trends of Average Annual Salary", x="Work Year", y="Average Salary")
# getting the top 5 job titles and their salaries
top_five_jobs <- salary_df %>%
group_by(job_title) %>%
summarise(average_salary = mean(salary)) %>%
arrange(desc(average_salary)) %>%
head()
print(top_five_jobs)
ggplot(top_five_jobs, aes(x=job_title, y=average_salary)) +
geom_col() +
labs(title = "Top Five Jobs Titles With Salaries", x = "Job Title", y = "Salary") +
theme_minimal() +
theme(axis.text.x = element_text(angle=90, hjust=1))
# creating a color palette
colors <- c("red", "blue", "green", "orange", "purple")
ggplot(top_five_jobs, aes(x=job_title, y=average_salary, fill=job_title)) +
geom_col() +
scale_fill_manual(values = my_colors) +
labs(title = "Top Five Jobs Titles With Salaries", x = "Job Title", y = "Salary") +
theme_minimal() +
theme(axis.text.x = element_text(angle=90, hjust=1))
ggplot(top_five_jobs, aes(x=job_title, y=average_salary, fill=job_title)) +
geom_col() +
scale_fill_manual(values = colors) +
labs(title = "Top Five Jobs Titles With Salaries", x = "Job Title", y = "Salary") +
theme_minimal() +
theme(axis.text.x = element_text(angle=90, hjust=1))
# creating a color palette
colors <- c("red", "blue", "green", "orange", "purple", "yellow")
ggplot(top_five_jobs, aes(x=job_title, y=average_salary, fill=job_title)) +
geom_col() +
scale_fill_manual(values = colors) +
labs(title = "Top Five Jobs Titles With Salaries", x = "Job Title", y = "Salary") +
theme_minimal() +
theme(axis.text.x = element_text(angle=90, hjust=1))
print(top_five_jobs)
top_five_job_titles <- head(sort(table(salary_df$job_title), decreasing=T), 5)
top_five_job_titles
# salary based on currency
currency_salary <- salary_df %>%
group_by(salary_currency) %>%
summarise(average_salary = mean(salary)) %>%
arrange(desc(average_salary)) %>%
head()
print(currency_salary)
ggplot(currency_salary, aes(x=currency_salary, y=average_salary)) +
geom_col() +
labs(title = "Salary vs. Currency", x="Salary", y = "Currency")
ggplot(currency_salary, aes(x=currency_salary, y=average_salary)) +
geom_col() +
labs(title = "Salary vs. Currency", x="Salary", y = "Currency")
# salary based on currency
salary_based_on_currency <- salary_df %>%
group_by(salary_currency) %>%
summarise(average_salary = mean(salary)) %>%
arrange(desc(average_salary)) %>%
head()
print(salary_based_on_currency)
ggplot(salary_based_on_currency, aes(x=salary_currency, y=average_salary)) +
geom_col() +
labs(title = "Salary vs. Currency", x="Salary", y = "Currency")
ggplot(salary_based_on_currency, aes(x=salary_currency, y=average_salary, fill=salary_currency)) +
geom_col() +
scale_fill_manual(values = colors) +
labs(title = "Salary vs. Currency", x="Salary", y = "Currency")
# trends in the salaries based on company size
salary_company_size <- salary_df %>%
group_by(company_size) %>%
summarise(average_salary = mean(salary))
# trends in the salaries based on company size
salary_based_on_company_size <- salary_df %>%
group_by(company_size) %>%
summarise(average_salary = mean(salary))
salary_based_on_company_size
ggplot(salary_based_on_company_size, aes(x=company_size, y=average_salary)) +
geom_col() +
labs(title = "Average Salary based on Company Size", x="Company Size", y="Average Salary")
ggplot(salary_based_on_company_size, aes(x=company_size, y=average_salary, fill=company_size)) +
geom_col() +
labs(title = "Average Salary based on Company Size", x="Company Size", y="Average Salary")
scale_fill_manual(values = rainbow(length(company_size)) +
ggplot(salary_based_on_company_size, aes(x=company_size, y=average_salary, fill=company_size)) +
ggplot(salary_based_on_company_size, aes(x=company_size, y=average_salary, fill=company_size)) +
geom_col() +
labs(title = "Average Salary based on Company Size", x="Company Size", y="Average Salary")
# distribution of salary by experience level
salary_by_experience <- salary_df %>%
salary_by_experience
# distribution of salary by experience level
salary_by_experience <- salary_df %>%
group_by(experience_level) %>%
summarise(average_salary = mean(salary))
salary_by_experience
ggplot(salary_based_on_company_size, aes(x=experience, y=average_salary, fill=experience)) +
geom_col() +
labs(title = "Average Salary based on Experience", x="Experience", y="Average Salary")
ggplot(salary_based_on_company_size, aes(x=experience_level, y=average_salary, fill=experience)) +
geom_col() +
labs(title = "Average Salary based on Experience", x="Experience", y="Average Salary")
ggplot(salary_by_experience, aes(x=experience_level, y=average_salary, fill=experience)) +
geom_col() +
labs(title = "Average Salary based on Experience", x="Experience", y="Average Salary")
ggplot(salary_by_experience, aes(x=experience_level, y=average_salary, fill=experience_level)) +
geom_col() +
labs(title = "Average Salary based on Experience", x="Experience", y="Average Salary")
# creating boxplot to see the distribution of salary based on experience level
ggplot(salary_df, aes(x=experience_level, y=scale(salary))) +
geom_boxplot() +
labs(title="Boxplot of Salary based on Experience Level", x='Experience Level', y='Salary') +
theme_minimal()
ggplot(salary_df, aes(x=experience_level, y=salary_in_usd)) +
geom_boxplot(fill=experience_level) +
labs(title="Distribution of Salary by Experience Level", x="Experience Level", y="Salary") +
theme_minimal()
ggplot(salary_df, aes(x=experience_level, y=salary_in_usd)) +
geom_boxplot(fill=experience_level) +
labs(title="Distribution of Salary by Experience Level", x="Experience Level", y="Salary") +
theme_minimal()
ggplot(salary_df, aes(x=experience_level, y=salary_in_usd)) +
geom_boxplot(fill=experience_level) +
labs(title="Distribution of Salary by Experience Level", x="Experience Level", y="Salary") +
theme_minimal()
ggplot(salary_df, aes(x=salary_df$experience_level, y=salary_in_usd)) +
geom_boxplot(fill=experience_level) +
labs(title="Distribution of Salary by Experience Level", x="Experience Level", y="Salary") +
theme_minimal()
ggplot(salary_df, aes(x=experience_level, y=salary_in_usd)) +
geom_boxplot(fill="red") +
labs(title="Distribution of Salary by Experience Level", x="Experience Level", y="Salary") +
theme_minimal()
ggplot(salary_df, aes(x=experience_level, y=salary_in_usd)) +
geom_boxplot(fill="red") +
labs(title="Distribution of Salary by Experience Level", x="Experience Level", y="Salary in USD") +
theme_minimal()
salary_in_usd_histogram<-ggplot(salary_df, aes(x=salary_in_usd)) +
geom_histogram(binwidth=10000, fill = "red") +
labs(title="Distribution of Salary in USD", x="Salary", y="Frequency")
salary_in_usd_histogram
salary_in_usd_histogram<-ggplot(salary_df, aes(x=salary_in_usd)) +
geom_histogram(binwidth=10000, fill = "blue") +
labs(title="Distribution of Salary in USD", x="Salary", y="Frequency")
salary_in_usd_histogram<-ggplot(salary_df, aes(x=salary_in_usd)) +
geom_histogram(binwidth=10000, fill = "blue") +
labs(title="Distribution of Salary in USD", x="Salary", y="Frequency")
salary_in_usd_histogram
# distribution of salary by employment type
salary_by_employment_type <- salary_df %>%
group_by(employment_type) %>%
summarise(average_salary = mean(salary))
print(salary_by_employment_type)
ggplot(salary_by_employment_type, aes(x=employment_type, y=average_salary, fill=employment_type)) +
geom_col() +
labs(title = "Average Salary based on Employment Type", x="Employment Type", y="Average Salary")
ggplot(salary_by_employment_type, aes(x=employment_type, y=average_salary, fill=employment_type)) +
geom_col() +
labs(title = "Average Salary based on Employment Type", x="Employment Type", y="Average Salary")
ggplot(salary_df, aes(x=employment_type, y=salary_in_usd)) +
geom_boxplot(fill="skyblue") +
labs(title="Distribution of Salary by Employment Type", x="Employment Type", y="Salary")
ggplot(salary_by_experience, aes(x=experience_level, y=average_salary, fill=experience_level)) +
geom_col() +
labs(title = "Average Salary based on Experience Level", x="Experience Level", y="Average Salary")
# creating boxplot to see the distribution of salary based on experience level
ggplot(salary_df, aes(x=experience_level, y=scale(salary))) +
geom_boxplot() +
labs(title="Boxplot of Salary based on Experience Level", x='Experience Level', y='Salary') +
theme_minimal()
ggplot(salary_df, aes(x=employment_type, y=salary_in_usd)) +
geom_boxplot(fill="skyblue") +
labs(title="Distribution of Salary by Employment Type", x="Employment Type", y="Salary")
View(salary_df)
View(salary_df)
ggplot(top_five_jobs, aes(x=job_title, y=average_salary, fill=job_title)) +
geom_col() +
scale_fill_manual(values = colors) +
labs(title = "Top Five Jobs Titles With Salaries", x = "Job Title", y = "Salary") +
theme_minimal() +
theme(axis.text.x = element_text(angle=90, hjust=1))
top_five_job_titles <- head(sort(table(salary_df$job_title), decreasing=T), 5)
top_five_job_titles
print(top_five_jobs)
# getting the top 5 job titles and their salaries
top_five_jobs <- salary_df %>%
group_by(job_title) %>%
summarise(average_salary = mean(salary)) %>%
arrange(desc(average_salary)) %>%
head(n=5)
print(top_five_jobs)
# creating a color palette
colors <- c("red", "blue", "green", "orange", "purple")
ggplot(top_five_jobs, aes(x=job_title, y=average_salary, fill=job_title)) +
geom_col() +
scale_fill_manual(values = colors) +
labs(title = "Top Five Jobs Titles With Salaries", x = "Job Title", y = "Salary") +
theme_minimal() +
theme(axis.text.x = element_text(angle=90, hjust=1))
top_five_job_titles <- head(sort(table(salary_df$job_title), decreasing=T), 5)
top_five_job_titles
# salary based on currency
salary_based_on_currency <- salary_df %>%
group_by(salary_currency) %>%
summarise(average_salary = mean(salary)) %>%
arrange(desc(average_salary)) %>%
head()
print(salary_based_on_currency)
# salary based on currency
salary_based_on_currency <- salary_df %>%
group_by(salary_currency) %>%
summarise(average_salary = mean(salary)) %>%
arrange(desc(average_salary)) %>%
head(n=5)
print(salary_based_on_currency)
ggplot(salary_based_on_currency, aes(x=salary_currency, y=average_salary, fill=salary_currency)) +
geom_col() +
scale_fill_manual(values = colors) +
labs(title = "Salary vs. Currency", x="Salary", y = "Currency")
# trends in the salaries based on company size
salary_based_on_company_size <- salary_df %>%
group_by(company_size) %>%
summarise(average_salary = mean(salary))
salary_based_on_company_size
ggplot(salary_based_on_company_size, aes(x=company_size, y=average_salary, fill=company_size)) +
geom_col() +
labs(title = "Average Salary based on Company Size", x="Company Size", y="Average Salary")
# distribution of salary by experience level
salary_by_experience <- salary_df %>%
group_by(experience_level) %>%
summarise(average_salary = mean(salary))
salary_by_experience
ggplot(salary_by_experience, aes(x=experience_level, y=average_salary, fill=experience_level)) +
geom_col() +
labs(title = "Average Salary based on Experience Level", x="Experience Level", y="Average Salary")
# creating boxplot to see the distribution of salary based on experience level
ggplot(salary_df, aes(x=experience_level, y=scale(salary))) +
geom_boxplot() +
labs(title="Boxplot of Salary based on Experience Level", x='Experience Level', y='Salary') +
theme_minimal()
# seeing the distribution of salary in usd and expeience level
ggplot(salary_df, aes(x=experience_level, y=salary_in_usd)) +
geom_boxplot(fill="red") +
labs(title="Distribution of Salary by Experience Level", x="Experience Level", y="Salary in USD") +
theme_minimal()
salary_in_usd_histogram<-ggplot(salary_df, aes(x=salary_in_usd)) +
geom_histogram(binwidth=10000, fill = "blue") +
labs(title="Distribution of Salary in USD", x="Salary", y="Frequency")
salary_in_usd_histogram
# distribution of salary by employment type
salary_by_employment_type <- salary_df %>%
group_by(employment_type) %>%
summarise(average_salary = mean(salary))
print(salary_by_employment_type)
ggplot(salary_by_employment_type, aes(x=employment_type, y=average_salary, fill=employment_type)) +
geom_col() +
labs(title = "Average Salary based on Employment Type", x="Employment Type", y="Average Salary")
ggplot(salary_df, aes(x=employment_type, y=salary_in_usd)) +
geom_boxplot(fill="skyblue") +
labs(title="Distribution of Salary by Employment Type", x="Employment Type", y="Salary")
